buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:8.5.10'
    }
}

plugins {
    id 'java'
    id 'application'  //torna nossa aplicacao em um java app
    //2.6.7 no curso, traz com ele as versoes com a bibliotecas mais recentes
    id 'org.springframework.boot' version '2.7.2'
    //11 - plugin para incluir as depencidas do spring assim nao precisamos lidar manualmente com as versoes
    id "io.spring.dependency-management" version '1.0.12.RELEASE'
    id 'org.flywaydb.flyway' version '8.5.10'
}

group 'br.com.dalcatech.admin.catalogo.infrastructure'
version '1.0-SNAPSHOT'

bootJar
        {
            //isto serve para mudar o novo do jar final do projeto e colocar ele na raiz do projeto principal
            //archiveName('application.jar') deu erro em gradle 8 e eu tirei
            destinationDirectory.set(file("${rootProject.buildDir}/libs"))
        }

repositories {
    mavenCentral()
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation('mysql:mysql-connector-java') //conector mysql
    implementation('org.springframework.boot:spring-boot-starter-web')
        {
            exclude module: 'spring-boot-starter-tomcat'  //tiro o tomcat porque vamos usar outro (Jboss)
        }
    implementation('org.springframework.boot:spring-boot-starter-undertow') //servidor web do jboos, usado no lugar do tomcat
    implementation('org.springframework.boot:spring-boot-starter-data-jpa') //eh quem faz a persistencia no banco, se conecta com as abstracoes sping

    testImplementation('org.flywaydb:flyway-core')
    testImplementation ('org.springframework.boot:spring-boot-starter-test')
    testRuntimeOnly('com.h2database:h2')
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/adm_videos'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASS') ?: '123456'

    //:? significa que se a variavel de ambiente nao tiver preenchida vai usar um valor default
}

test {
    useJUnitPlatform()
}